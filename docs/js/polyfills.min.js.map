{"version":3,"sources":["node_modules/whatwg-fetch/dist/fetch.umd.js","node_modules/promise-polyfill/dist/polyfill.js","src/polyfills/polyfills.js"],"names":["global","factory","exports","module","define","amd","WHATWGFetch","this","support","self","Symbol","Blob","e","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","Object","prototype","toString","call","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","map","forEach","append","Array","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","type","rejected","Error","arrayBuffer","then","text","readAsText","chars","length","i","fromCharCode","join","readArrayBufferAsText","formData","decode","json","JSON","parse","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","methods","Request","input","options","method","upcased","url","credentials","mode","signal","toUpperCase","referrer","form","trim","split","bytes","replace","decodeURIComponent","Response","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","DOMException","err","message","stack","create","constructor","fetch","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","key","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","defineProperty","finallyConstructor","reason","setTimeoutFunc","setTimeout","x","Boolean","noop","fn","_state","_handled","_value","_deferreds","doResolve","handle","deferred","_immediateFn","cb","onFulfilled","onRejected","ret","newValue","finale","apply","arguments","_unhandledRejectionFn","len","Handler","ex","prom","all","arr","args","remaining","res","val","race","setImmediate","console","warn","globalNS","window","assign","target","varArgs","to","index","nextSource","nextKey","writable","configurable","find","predicate","list","fill","O","start","relativeStart","k","Math","max","min","end","relativeEnd","final","from","toStr","isCallable","maxSafeInteger","pow","toLength","number","Number","isNaN","isFinite","floor","abs","toInteger","arrayLike","C","T","mapFn","kValue","A"],"mappings":"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","file":"docs/js/polyfills.min.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.WHATWGFetch = {})));\n}(this, (function (exports) { 'use strict';\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(factory());\n}(this, (function () { 'use strict';\n\n/**\n * @this {Promise}\n */\nfunction finallyConstructor(callback) {\n  var constructor = this.constructor;\n  return this.then(\n    function(value) {\n      // @ts-ignore\n      return constructor.resolve(callback()).then(function() {\n        return value;\n      });\n    },\n    function(reason) {\n      // @ts-ignore\n      return constructor.resolve(callback()).then(function() {\n        // @ts-ignore\n        return constructor.reject(reason);\n      });\n    }\n  );\n}\n\n// Store setTimeout reference so promise-polyfill will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\nvar setTimeoutFunc = setTimeout;\n\nfunction isArray(x) {\n  return Boolean(x && typeof x.length !== 'undefined');\n}\n\nfunction noop() {}\n\n// Polyfill for Function.prototype.bind\nfunction bind(fn, thisArg) {\n  return function() {\n    fn.apply(thisArg, arguments);\n  };\n}\n\n/**\n * @constructor\n * @param {Function} fn\n */\nfunction Promise(fn) {\n  if (!(this instanceof Promise))\n    throw new TypeError('Promises must be constructed via new');\n  if (typeof fn !== 'function') throw new TypeError('not a function');\n  /** @type {!number} */\n  this._state = 0;\n  /** @type {!boolean} */\n  this._handled = false;\n  /** @type {Promise|undefined} */\n  this._value = undefined;\n  /** @type {!Array<!Function>} */\n  this._deferreds = [];\n\n  doResolve(fn, this);\n}\n\nfunction handle(self, deferred) {\n  while (self._state === 3) {\n    self = self._value;\n  }\n  if (self._state === 0) {\n    self._deferreds.push(deferred);\n    return;\n  }\n  self._handled = true;\n  Promise._immediateFn(function() {\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n      return;\n    }\n    var ret;\n    try {\n      ret = cb(self._value);\n    } catch (e) {\n      reject(deferred.promise, e);\n      return;\n    }\n    resolve(deferred.promise, ret);\n  });\n}\n\nfunction resolve(self, newValue) {\n  try {\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    if (newValue === self)\n      throw new TypeError('A promise cannot be resolved with itself.');\n    if (\n      newValue &&\n      (typeof newValue === 'object' || typeof newValue === 'function')\n    ) {\n      var then = newValue.then;\n      if (newValue instanceof Promise) {\n        self._state = 3;\n        self._value = newValue;\n        finale(self);\n        return;\n      } else if (typeof then === 'function') {\n        doResolve(bind(then, newValue), self);\n        return;\n      }\n    }\n    self._state = 1;\n    self._value = newValue;\n    finale(self);\n  } catch (e) {\n    reject(self, e);\n  }\n}\n\nfunction reject(self, newValue) {\n  self._state = 2;\n  self._value = newValue;\n  finale(self);\n}\n\nfunction finale(self) {\n  if (self._state === 2 && self._deferreds.length === 0) {\n    Promise._immediateFn(function() {\n      if (!self._handled) {\n        Promise._unhandledRejectionFn(self._value);\n      }\n    });\n  }\n\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\n    handle(self, self._deferreds[i]);\n  }\n  self._deferreds = null;\n}\n\n/**\n * @constructor\n */\nfunction Handler(onFulfilled, onRejected, promise) {\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, self) {\n  var done = false;\n  try {\n    fn(\n      function(value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      },\n      function(reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      }\n    );\n  } catch (ex) {\n    if (done) return;\n    done = true;\n    reject(self, ex);\n  }\n}\n\nPromise.prototype['catch'] = function(onRejected) {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  // @ts-ignore\n  var prom = new this.constructor(noop);\n\n  handle(this, new Handler(onFulfilled, onRejected, prom));\n  return prom;\n};\n\nPromise.prototype['finally'] = finallyConstructor;\n\nPromise.all = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!isArray(arr)) {\n      return reject(new TypeError('Promise.all accepts an array'));\n    }\n\n    var args = Array.prototype.slice.call(arr);\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n\n    function res(i, val) {\n      try {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          var then = val.then;\n          if (typeof then === 'function') {\n            then.call(\n              val,\n              function(val) {\n                res(i, val);\n              },\n              reject\n            );\n            return;\n          }\n        }\n        args[i] = val;\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex);\n      }\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.resolve = function(value) {\n  if (value && typeof value === 'object' && value.constructor === Promise) {\n    return value;\n  }\n\n  return new Promise(function(resolve) {\n    resolve(value);\n  });\n};\n\nPromise.reject = function(value) {\n  return new Promise(function(resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!isArray(arr)) {\n      return reject(new TypeError('Promise.race accepts an array'));\n    }\n\n    for (var i = 0, len = arr.length; i < len; i++) {\n      Promise.resolve(arr[i]).then(resolve, reject);\n    }\n  });\n};\n\n// Use polyfill for setImmediate for performance gains\nPromise._immediateFn =\n  // @ts-ignore\n  (typeof setImmediate === 'function' &&\n    function(fn) {\n      // @ts-ignore\n      setImmediate(fn);\n    }) ||\n  function(fn) {\n    setTimeoutFunc(fn, 0);\n  };\n\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n  if (typeof console !== 'undefined' && console) {\n    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n  }\n};\n\n/** @suppress {undefinedVars} */\nvar globalNS = (function() {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('unable to locate global object');\n})();\n\nif (!('Promise' in globalNS)) {\n  globalNS['Promise'] = Promise;\n} else if (!globalNS.Promise.prototype['finally']) {\n  globalNS.Promise.prototype['finally'] = finallyConstructor;\n}\n\n})));\n","// Polyfills for IE11\n\nif (typeof Object.assign != 'function') {\n\t// Must be writable: true, enumerable: false, configurable: true\n\tObject.defineProperty(Object, \"assign\", {\n\t\tvalue: function assign(target, varArgs) { // .length of function is 2\n\t\t\t'use strict';\n\t\t\tif (target == null) { // TypeError if undefined or null\n\t\t\t\tthrow new TypeError('Cannot convert undefined or null to object');\n\t\t\t}\n\t\t\tvar to = Object(target);\n\t\t\tfor (var index = 1; index < arguments.length; index++) {\n\t\t\t\tvar nextSource = arguments[index];\n\t\t\t\tif (nextSource != null) { // Skip over if undefined or null\n\t\t\t\t\tfor (var nextKey in nextSource) {\n\t\t\t\t\t\t// Avoid bugs when hasOwnProperty is shadowed\n\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n\t\t\t\t\t\t\tto[nextKey] = nextSource[nextKey];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn to;\n\t\t},\n\t\twritable: true,\n\t\tconfigurable: true\n\t});\n}\n\nif (!Array.prototype.find) {\n\tObject.defineProperty(Array.prototype, 'find', {\n\t\tvalue: function(predicate) {\n\t\t\t'use strict';\n\t\t\tif (this == null) {\n\t\t\t\tthrow new TypeError('Array.prototype.find called on null or undefined');\n\t\t\t}\n\t\t\tif (typeof predicate !== 'function') {\n\t\t\t\tthrow new TypeError('predicate must be a function');\n\t\t\t}\n\t\t\tvar list = Object(this);\n\t\t\tvar length = list.length >>> 0;\n\t\t\tvar thisArg = arguments[1];\n\t\t\tfor (var i = 0; i !== length; i++) {\n\t\t\t\tif (predicate.call(thisArg, this[i], i, list)) {\n\t\t\t\t\treturn this[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\t});\n}\n\nif (!Array.prototype.fill) {\n\tObject.defineProperty(Array.prototype, 'fill', {\n\t\tvalue: function(value) {\n\t\t\t// Steps 1-2.\n\t\t\tif (this == null) {\n\t\t\t\tthrow new TypeError('this is null or not defined');\n\t\t\t}\n\t\t\tvar O = Object(this);\n\t\t\t// Steps 3-5.\n\t\t\tvar len = O.length >>> 0;\n\t\t\t// Steps 6-7.\n\t\t\tvar start = arguments[1];\n\t\t\tvar relativeStart = start >> 0;\n\t\t\t// Step 8.\n\t\t\tvar k = relativeStart < 0 ?\n\t\t\t\tMath.max(len + relativeStart, 0) :\n\t\t\t\tMath.min(relativeStart, len);\n\t\t\t// Steps 9-10.\n\t\t\tvar end = arguments[2];\n\t\t\tvar relativeEnd = end === undefined ?\n\t\t\t\tlen : end >> 0;\n\t\t\t// Step 11.\n\t\t\tvar final = relativeEnd < 0 ?\n\t\t\t\tMath.max(len + relativeEnd, 0) :\n\t\t\t\tMath.min(relativeEnd, len);\n\t\t\t// Step 12.\n\t\t\twhile (k < final) {\n\t\t\t\tO[k] = value;\n\t\t\t\tk++;\n\t\t\t}\n\t\t\t// Step 13.\n\t\t\treturn O;\n\t\t}\n\t});\n}\n\n// Production steps of ECMA-262, Edition 6, 22.1.2.1\nif (!Array.from) {\n\tArray.from = (function() {\n\t\tvar toStr = Object.prototype.toString;\n\t\tvar isCallable = function(fn) {\n\t\t\treturn typeof fn === 'function' || toStr.call(fn) === '[object Function]';\n\t\t};\n\t\tvar toInteger = function(value) {\n\t\t\tvar number = Number(value);\n\t\t\tif (isNaN(number)) { return 0; }\n\t\t\tif (number === 0 || !isFinite(number)) { return number; }\n\t\t\treturn (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\n\t\t};\n\t\tvar maxSafeInteger = Math.pow(2, 53) - 1;\n\t\tvar toLength = function(value) {\n\t\t\tvar len = toInteger(value);\n\t\t\treturn Math.min(Math.max(len, 0), maxSafeInteger);\n\t\t};\n\n\t\t// The length property of the from method is 1.\n\t\treturn function from(arrayLike /*, mapFn, thisArg */ ) {\n\t\t\t// 1. Let C be the this value.\n\t\t\tvar C = this;\n\n\t\t\t// 2. Let items be ToObject(arrayLike).\n\t\t\tvar items = Object(arrayLike);\n\n\t\t\t// 3. ReturnIfAbrupt(items).\n\t\t\tif (arrayLike == null) {\n\t\t\t\tthrow new TypeError('Array.from requires an array-like object - not null or undefined');\n\t\t\t}\n\n\t\t\t// 4. If mapfn is undefined, then let mapping be false.\n\t\t\tvar mapFn = arguments.length > 1 ? arguments[1] : void undefined;\n\t\t\tvar T;\n\t\t\tif (typeof mapFn !== 'undefined') {\n\t\t\t\t// 5. else\n\t\t\t\t// 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\n\t\t\t\tif (!isCallable(mapFn)) {\n\t\t\t\t\tthrow new TypeError('Array.from: when provided, the second argument must be a function');\n\t\t\t\t}\n\n\t\t\t\t// 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\n\t\t\t\tif (arguments.length > 2) {\n\t\t\t\t\tT = arguments[2];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 10. Let lenValue be Get(items, \"length\").\n\t\t\t// 11. Let len be ToLength(lenValue).\n\t\t\tvar len = toLength(items.length);\n\n\t\t\t// 13. If IsConstructor(C) is true, then\n\t\t\t// 13. a. Let A be the result of calling the [[Construct]] internal method\n\t\t\t// of C with an argument list containing the single item len.\n\t\t\t// 14. a. Else, Let A be ArrayCreate(len).\n\t\t\tvar A = isCallable(C) ? Object(new C(len)) : new Array(len);\n\n\t\t\t// 16. Let k be 0.\n\t\t\tvar k = 0;\n\t\t\t// 17. Repeat, while k < len… (also steps a - h)\n\t\t\tvar kValue;\n\t\t\twhile (k < len) {\n\t\t\t\tkValue = items[k];\n\t\t\t\tif (mapFn) {\n\t\t\t\t\tA[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\n\t\t\t\t} else {\n\t\t\t\t\tA[k] = kValue;\n\t\t\t\t}\n\t\t\t\tk += 1;\n\t\t\t}\n\t\t\t// 18. Let putStatus be Put(A, \"length\", len, true).\n\t\t\tA.length = len;\n\t\t\t// 20. Return A.\n\t\t\treturn A;\n\t\t};\n\t}());\n}\n"]}