{"version":3,"sources":["node_modules/whatwg-fetch/dist/fetch.umd.js","node_modules/promise-polyfill/dist/polyfill.js","src/polyfills/polyfills.js"],"names":["global","factory","exports","module","define","amd","WHATWGFetch","this","support","searchParams","self","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","Object","prototype","toString","call","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","map","forEach","append","Array","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","type","rejected","Error","then","text","readAsText","chars","length","i","fromCharCode","join","readArrayBufferAsText","decode","json","JSON","parse","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","methods","Request","input","options","method","upcased","url","credentials","mode","signal","toUpperCase","referrer","form","trim","split","bytes","replace","decodeURIComponent","Response","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","DOMException","err","message","stack","create","constructor","fetch","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","key","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","defineProperty","finallyConstructor","reason","setTimeoutFunc","setTimeout","noop","fn","_state","_handled","_value","_deferreds","doResolve","handle","deferred","_immediateFn","cb","onFulfilled","onRejected","ret","newValue","finale","apply","arguments","_unhandledRejectionFn","len","Handler","ex","prom","all","arr","args","remaining","res","val","race","setImmediate","console","warn","globalNS","window","assign","target","varArgs","to","index","nextSource","nextKey","writable","configurable","find","predicate","list","fill","O","relativeStart","k","Math","max","min","end","relativeEnd","final","from","toStr","isCallable","maxSafeInteger","pow","toLength","number","Number","isNaN","isFinite","floor","abs","toInteger","arrayLike","T","mapFn","kValue","A"],"mappings":"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","file":"docs/js/polyfills.min.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.WHATWGFetch = {})));\n}(this, (function (exports) { 'use strict';\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(factory());\n}(this, (function () { 'use strict';\n\n/**\n * @this {Promise}\n */\nfunction finallyConstructor(callback) {\n  var constructor = this.constructor;\n  return this.then(\n    function(value) {\n      return constructor.resolve(callback()).then(function() {\n        return value;\n      });\n    },\n    function(reason) {\n      return constructor.resolve(callback()).then(function() {\n        return constructor.reject(reason);\n      });\n    }\n  );\n}\n\n// Store setTimeout reference so promise-polyfill will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\nvar setTimeoutFunc = setTimeout;\n\nfunction noop() {}\n\n// Polyfill for Function.prototype.bind\nfunction bind(fn, thisArg) {\n  return function() {\n    fn.apply(thisArg, arguments);\n  };\n}\n\n/**\n * @constructor\n * @param {Function} fn\n */\nfunction Promise(fn) {\n  if (!(this instanceof Promise))\n    throw new TypeError('Promises must be constructed via new');\n  if (typeof fn !== 'function') throw new TypeError('not a function');\n  /** @type {!number} */\n  this._state = 0;\n  /** @type {!boolean} */\n  this._handled = false;\n  /** @type {Promise|undefined} */\n  this._value = undefined;\n  /** @type {!Array<!Function>} */\n  this._deferreds = [];\n\n  doResolve(fn, this);\n}\n\nfunction handle(self, deferred) {\n  while (self._state === 3) {\n    self = self._value;\n  }\n  if (self._state === 0) {\n    self._deferreds.push(deferred);\n    return;\n  }\n  self._handled = true;\n  Promise._immediateFn(function() {\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n      return;\n    }\n    var ret;\n    try {\n      ret = cb(self._value);\n    } catch (e) {\n      reject(deferred.promise, e);\n      return;\n    }\n    resolve(deferred.promise, ret);\n  });\n}\n\nfunction resolve(self, newValue) {\n  try {\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    if (newValue === self)\n      throw new TypeError('A promise cannot be resolved with itself.');\n    if (\n      newValue &&\n      (typeof newValue === 'object' || typeof newValue === 'function')\n    ) {\n      var then = newValue.then;\n      if (newValue instanceof Promise) {\n        self._state = 3;\n        self._value = newValue;\n        finale(self);\n        return;\n      } else if (typeof then === 'function') {\n        doResolve(bind(then, newValue), self);\n        return;\n      }\n    }\n    self._state = 1;\n    self._value = newValue;\n    finale(self);\n  } catch (e) {\n    reject(self, e);\n  }\n}\n\nfunction reject(self, newValue) {\n  self._state = 2;\n  self._value = newValue;\n  finale(self);\n}\n\nfunction finale(self) {\n  if (self._state === 2 && self._deferreds.length === 0) {\n    Promise._immediateFn(function() {\n      if (!self._handled) {\n        Promise._unhandledRejectionFn(self._value);\n      }\n    });\n  }\n\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\n    handle(self, self._deferreds[i]);\n  }\n  self._deferreds = null;\n}\n\n/**\n * @constructor\n */\nfunction Handler(onFulfilled, onRejected, promise) {\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, self) {\n  var done = false;\n  try {\n    fn(\n      function(value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      },\n      function(reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      }\n    );\n  } catch (ex) {\n    if (done) return;\n    done = true;\n    reject(self, ex);\n  }\n}\n\nPromise.prototype['catch'] = function(onRejected) {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  // @ts-ignore\n  var prom = new this.constructor(noop);\n\n  handle(this, new Handler(onFulfilled, onRejected, prom));\n  return prom;\n};\n\nPromise.prototype['finally'] = finallyConstructor;\n\nPromise.all = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!arr || typeof arr.length === 'undefined')\n      throw new TypeError('Promise.all accepts an array');\n    var args = Array.prototype.slice.call(arr);\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n\n    function res(i, val) {\n      try {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          var then = val.then;\n          if (typeof then === 'function') {\n            then.call(\n              val,\n              function(val) {\n                res(i, val);\n              },\n              reject\n            );\n            return;\n          }\n        }\n        args[i] = val;\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex);\n      }\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.resolve = function(value) {\n  if (value && typeof value === 'object' && value.constructor === Promise) {\n    return value;\n  }\n\n  return new Promise(function(resolve) {\n    resolve(value);\n  });\n};\n\nPromise.reject = function(value) {\n  return new Promise(function(resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function(values) {\n  return new Promise(function(resolve, reject) {\n    for (var i = 0, len = values.length; i < len; i++) {\n      values[i].then(resolve, reject);\n    }\n  });\n};\n\n// Use polyfill for setImmediate for performance gains\nPromise._immediateFn =\n  (typeof setImmediate === 'function' &&\n    function(fn) {\n      setImmediate(fn);\n    }) ||\n  function(fn) {\n    setTimeoutFunc(fn, 0);\n  };\n\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n  if (typeof console !== 'undefined' && console) {\n    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n  }\n};\n\n/** @suppress {undefinedVars} */\nvar globalNS = (function() {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('unable to locate global object');\n})();\n\nif (!('Promise' in globalNS)) {\n  globalNS['Promise'] = Promise;\n} else if (!globalNS.Promise.prototype['finally']) {\n  globalNS.Promise.prototype['finally'] = finallyConstructor;\n}\n\n})));\n","// Polyfills for IE11\n\nif (typeof Object.assign != 'function') {\n\t// Must be writable: true, enumerable: false, configurable: true\n\tObject.defineProperty(Object, \"assign\", {\n\t\tvalue: function assign(target, varArgs) { // .length of function is 2\n\t\t\t'use strict';\n\t\t\tif (target == null) { // TypeError if undefined or null\n\t\t\t\tthrow new TypeError('Cannot convert undefined or null to object');\n\t\t\t}\n\t\t\tvar to = Object(target);\n\t\t\tfor (var index = 1; index < arguments.length; index++) {\n\t\t\t\tvar nextSource = arguments[index];\n\t\t\t\tif (nextSource != null) { // Skip over if undefined or null\n\t\t\t\t\tfor (var nextKey in nextSource) {\n\t\t\t\t\t\t// Avoid bugs when hasOwnProperty is shadowed\n\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n\t\t\t\t\t\t\tto[nextKey] = nextSource[nextKey];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn to;\n\t\t},\n\t\twritable: true,\n\t\tconfigurable: true\n\t});\n}\n\nif (!Array.prototype.find) {\n\tObject.defineProperty(Array.prototype, 'find', {\n\t\tvalue: function(predicate) {\n\t\t\t'use strict';\n\t\t\tif (this == null) {\n\t\t\t\tthrow new TypeError('Array.prototype.find called on null or undefined');\n\t\t\t}\n\t\t\tif (typeof predicate !== 'function') {\n\t\t\t\tthrow new TypeError('predicate must be a function');\n\t\t\t}\n\t\t\tvar list = Object(this);\n\t\t\tvar length = list.length >>> 0;\n\t\t\tvar thisArg = arguments[1];\n\t\t\tfor (var i = 0; i !== length; i++) {\n\t\t\t\tif (predicate.call(thisArg, this[i], i, list)) {\n\t\t\t\t\treturn this[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\t});\n}\n\nif (!Array.prototype.fill) {\n\tObject.defineProperty(Array.prototype, 'fill', {\n\t\tvalue: function(value) {\n\t\t\t// Steps 1-2.\n\t\t\tif (this == null) {\n\t\t\t\tthrow new TypeError('this is null or not defined');\n\t\t\t}\n\t\t\tvar O = Object(this);\n\t\t\t// Steps 3-5.\n\t\t\tvar len = O.length >>> 0;\n\t\t\t// Steps 6-7.\n\t\t\tvar start = arguments[1];\n\t\t\tvar relativeStart = start >> 0;\n\t\t\t// Step 8.\n\t\t\tvar k = relativeStart < 0 ?\n\t\t\t\tMath.max(len + relativeStart, 0) :\n\t\t\t\tMath.min(relativeStart, len);\n\t\t\t// Steps 9-10.\n\t\t\tvar end = arguments[2];\n\t\t\tvar relativeEnd = end === undefined ?\n\t\t\t\tlen : end >> 0;\n\t\t\t// Step 11.\n\t\t\tvar final = relativeEnd < 0 ?\n\t\t\t\tMath.max(len + relativeEnd, 0) :\n\t\t\t\tMath.min(relativeEnd, len);\n\t\t\t// Step 12.\n\t\t\twhile (k < final) {\n\t\t\t\tO[k] = value;\n\t\t\t\tk++;\n\t\t\t}\n\t\t\t// Step 13.\n\t\t\treturn O;\n\t\t}\n\t});\n}\n\n// Production steps of ECMA-262, Edition 6, 22.1.2.1\nif (!Array.from) {\n\tArray.from = (function() {\n\t\tvar toStr = Object.prototype.toString;\n\t\tvar isCallable = function(fn) {\n\t\t\treturn typeof fn === 'function' || toStr.call(fn) === '[object Function]';\n\t\t};\n\t\tvar toInteger = function(value) {\n\t\t\tvar number = Number(value);\n\t\t\tif (isNaN(number)) { return 0; }\n\t\t\tif (number === 0 || !isFinite(number)) { return number; }\n\t\t\treturn (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\n\t\t};\n\t\tvar maxSafeInteger = Math.pow(2, 53) - 1;\n\t\tvar toLength = function(value) {\n\t\t\tvar len = toInteger(value);\n\t\t\treturn Math.min(Math.max(len, 0), maxSafeInteger);\n\t\t};\n\n\t\t// The length property of the from method is 1.\n\t\treturn function from(arrayLike /*, mapFn, thisArg */ ) {\n\t\t\t// 1. Let C be the this value.\n\t\t\tvar C = this;\n\n\t\t\t// 2. Let items be ToObject(arrayLike).\n\t\t\tvar items = Object(arrayLike);\n\n\t\t\t// 3. ReturnIfAbrupt(items).\n\t\t\tif (arrayLike == null) {\n\t\t\t\tthrow new TypeError('Array.from requires an array-like object - not null or undefined');\n\t\t\t}\n\n\t\t\t// 4. If mapfn is undefined, then let mapping be false.\n\t\t\tvar mapFn = arguments.length > 1 ? arguments[1] : void undefined;\n\t\t\tvar T;\n\t\t\tif (typeof mapFn !== 'undefined') {\n\t\t\t\t// 5. else\n\t\t\t\t// 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\n\t\t\t\tif (!isCallable(mapFn)) {\n\t\t\t\t\tthrow new TypeError('Array.from: when provided, the second argument must be a function');\n\t\t\t\t}\n\n\t\t\t\t// 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\n\t\t\t\tif (arguments.length > 2) {\n\t\t\t\t\tT = arguments[2];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 10. Let lenValue be Get(items, \"length\").\n\t\t\t// 11. Let len be ToLength(lenValue).\n\t\t\tvar len = toLength(items.length);\n\n\t\t\t// 13. If IsConstructor(C) is true, then\n\t\t\t// 13. a. Let A be the result of calling the [[Construct]] internal method\n\t\t\t// of C with an argument list containing the single item len.\n\t\t\t// 14. a. Else, Let A be ArrayCreate(len).\n\t\t\tvar A = isCallable(C) ? Object(new C(len)) : new Array(len);\n\n\t\t\t// 16. Let k be 0.\n\t\t\tvar k = 0;\n\t\t\t// 17. Repeat, while k < len… (also steps a - h)\n\t\t\tvar kValue;\n\t\t\twhile (k < len) {\n\t\t\t\tkValue = items[k];\n\t\t\t\tif (mapFn) {\n\t\t\t\t\tA[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\n\t\t\t\t} else {\n\t\t\t\t\tA[k] = kValue;\n\t\t\t\t}\n\t\t\t\tk += 1;\n\t\t\t}\n\t\t\t// 18. Let putStatus be Put(A, \"length\", len, true).\n\t\t\tA.length = len;\n\t\t\t// 20. Return A.\n\t\t\treturn A;\n\t\t};\n\t}());\n}\n"]}